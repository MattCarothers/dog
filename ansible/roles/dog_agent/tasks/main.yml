---
- name: check if consul certs installed
  stat:
    path: /var/consul/data/pki/private/server.key
  register: key

  #- debug: var=key.stat.exists

- name: consul_ca_download
  include_role:
    name: consul_ca_download
  when: key.stat.exists == false and env != 'box'

- name: consul_tls_cert
  include_role:
    name: consul_tls_cert
  when: key.stat.exists == false and env != 'box'

- name: tls_cert
  include_role:
    name: tls_cert
  when: key.stat.exists == false and env == 'box'

- name: add dog to consul group to access certs
  user:
    name: dog
    groups: consul
    append: yes

- block:
  - name: local_deploy
    include_role:
      name: local_deploy
    vars:
  when: ansible_os_family == 'Debian' and (ansible_distribution_major_version == "20")
        and env == 'box'
  tags:
    - upgrade

- block:
  - name: common_deploy
    include_role:
      name: common_deploy
    vars:
      env: "{{ dog_env }}"
      app: dog
      s3_app: dog
      app_owner: dog
      env_specific_builds: True
      jenkins_job: dog-ubuntu
      s3_app: dog
      extension: ".ubuntu.tar.gz"
      cluster: ""
      cluster_separator: ""
  when: ansible_os_family == 'Debian' and (ansible_distribution_major_version == "16" or ansible_distribution_major_version == "18")
        and env != 'box'
  tags:
    - upgrade

- block:
  - name: common_deploy
    include_role:
      name: common_deploy
    vars:
      env: "{{ dog_env }}"
      app: dog
      s3_app: dog
      app_owner: dog
      env_specific_builds: True
      jenkins_job: dog-ubuntu
      s3_app: dog
      extension: ".ubuntu12.tar.gz"
      cluster: ""
      cluster_separator: ""
  when: ansible_os_family == 'Debian' and ansible_distribution_major_version == "12"
        and env != 'box'
  tags:
    - upgrade
    
- block:
  - name: common_deploy
    include_role:
      name: common_deploy
    vars:
      env: "{{ dog_env }}"
      app: dog
      s3_app: dog
      app_owner: dog
      env_specific_builds: True
      jenkins_job: dog-centos,
      s3_app: dog
      extension: ".centos7.tar.gz"
      cluster: ""
      cluster_separator: ""
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == "7" 
        and env != 'box'
  tags:
    - upgrade
    
- block:
  - name: common_deploy
    include_role:
      name: common_deploy
    vars:
      env: "{{ dog_env }}"
      app: dog
      s3_app: dog
      app_owner: dog
      env_specific_builds: True
      jenkins_job: dog-centos,
      s3_app: dog
      extension: ".centos.tar.gz"
      cluster: ""
      cluster_separator: ""
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == "6" or (ansible_distribution == "Amazon")
        and env != 'box'
  tags:
    - upgrade

- name: mkdirs
  file:
      dest  : "{{ item }}"
      state : directory
      owner : dog
      group : dog
      mode  : 0700
  with_items:
      - /opt/dog/priv/certs/rabbitmq/ 
      - /opt/dog/priv/certs/rabbitmq/ca 
      - /opt/dog/priv/certs/rabbitmq/client 
  tags:
    - upgrade

- name: place broker certs from templates
  template:
      src   : "templates/certs/{{ item.d }}/{{ item.f }}.j2"
      dest  : "/opt/dog/priv/certs/rabbitmq/{{ item.d }}/{{ item.f }}"
      owner : dog
      group : dog
      mode  : 0700
  with_items:
      - {d: 'ca', f: 'cacert.pem'}
      - {d: 'client', f: 'cert.pem'}
      - {d: 'client', f: 'key.pem'}
  tags:
    - upgrade

- name: mkdir /tmp/erl_pipes
  file: dest=/tmp/erl_pipes/ owner=root group=root state=directory mode=0777

- name: mkdirs
  file:
      dest  : "{{ item }}"
      state : directory
      owner : dog
      group : dog
      mode  : 0700
  with_items:
      - /etc/dog
      - /var/log/dog
      - /var/db/dog
      - /tmp/erl_pipes/dog 

        #- debug: var=cloudpassage_tag
        #- debug: var=ansible_fqdn

- name: create config.json from template
  template: dest=/etc/dog/config.json src=templates/config.json.j2 owner=dog group=dog force={{ dog_force }} mode=0700
  #when: cloudpassage_tag is defined

- name: kill dog-owned epmd
  shell: "kill $(ps -u dog | grep epmd | awk '{print $1}')"
  ignore_errors: yes

- name: include RedHat.yml
  block:
  # CentOS specific package installations
  - include: RedHat.yml
  when: ansible_os_family  == "RedHat"

- name: include Debian.yml
  block:
  # Ubuntu specific package installations
  - include: Debian.yml
  when: ansible_os_family  == "Debian"

- name: copy erlang cookie to host
  vars:
    app: dog
    app_owner: dog
  copy:
    src: "../../configs/dog/erlang.cookie.{{ env }}"
    dest: "/opt/{{ app }}/.erlang.cookie"
    owner: "{{ app_owner }}"
    group: "{{ app_owner }}"
    mode: 0400
    force: yes
  tags:
    - upgrade
  
    #- name: restart dog via systemd
    #  systemd:
    #    name: dog
    #    state: restarted
    #    enabled: yes        
    #    daemon_reload: yes
    #  when: ansible_os_family  == "Debian" and ansible_distribution_major_version != "12" 
    #  tags:
    #  - upgrade
    #
    #- name: restart dog
    #  service:
    #    name: dog
    #    state: restarted
    #    enabled: yes
    #  when: ansible_os_family  == "Debian" and ansible_distribution_major_version != "12" 
    #  when: ansible_os_family  == "RedHat"
    #  tags:
    #  - upgrade

- name: copy init dog config
  copy: src=dog.init dest=/etc/init.d/dog mode=0744 owner=dog group=dog
  when: ansible_os_family  == "RedHat"
  tags:
    - upgrade

- name: restart dog
  service:
    name: dog
    state: restarted
    enabled: yes
    #  when: ansible_os_family  == "RedHat"
  tags:
    - upgrade
