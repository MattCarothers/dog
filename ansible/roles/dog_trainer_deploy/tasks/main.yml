---
- name: check if consul certs installed
  stat:
    path: /var/consul/data/pki/private/server.key
  register: key

- debug: var=key.stat.exists

- name: consul_ca_download
  include_role:
    name: consul_ca_download
  when: key.stat.exists == false

- name: consul_tls_cert
  include_role:
    name: consul_tls_cert
  when: key.stat.exists == false

- name: add dog to consul group to access certs
  user:
    name: dog
    groups: consul
    append: yes

- name: copy consul dog_trainer service file
  copy: src=../files/dog_trainer.consul.json dest=/etc/consul.d/dog_trainer.json owner=root group=root
  notify:
    - reload consul
  when: env != "box"

- include: Debian.yml
  when: ansible_os_family == "Debian"

- name: common_deploy
  include_role:
    name: common_deploy
  vars:
    app: dog_trainer
    s3_app: dog_trainer
    app_owner: dog
    env_specific_builds: True
    jenkins_job: dog_trainer
    extension: ".tar.gz"
    cluster: ""
    cluster_separator: ""
  tags:
  - upgrade
  when: env != "box"

- name: git erts version from archive
  delegate_to: 127.0.0.1
  connection: local
  shell: tar -O -xf /ansible/repos/dog_agent/_build/box/rel/dog/dog-local.tar.gz releases/start_erl.data | awk '{print $1}'
  register: command_output
  when: env == "box"

- set_fact:
    erts_version: "{{ command_output.stdout }}"
  when: env == "box"

- name: get version from archive
  delegate_to: 127.0.0.1
  connection: local
  shell: tar -O -xf /ansible/repos/dog_trainer/_build/box/rel/dog_trainer/dog_trainer-local.tar.gz releases/start_erl.data | awk '{print $2}'
  register: command_output
  when: env == "box"

- set_fact:
    git_hash: "{{ command_output.stdout }}"
  when: env == "box"

- debug: var=git_hash
  when: env == "box"

- name: dog_trainer dir
  file:
    path: "/opt/dog_trainer.{{ git_hash }}"
    state: directory
    owner: dog
    group: dog
  when: env == "box"

- name: target host gets archive from local directory
  become: true
  unarchive:
    src: "{{ dog_trainer_repo }}/_build/box/rel/dog_trainer/dog_trainer-local.tar.gz"
    dest: "/opt/dog_trainer.{{ git_hash }}/"
    owner: dog
    group: dog
  when: env == "box"

- name: dog_trainer chown
  file:
    path: "/opt/dog_trainer.{{ git_hash }}"
    owner: dog
    group: dog
    recurse: yes
  when: env == "box"

- name: dog_trainer link
  file:
    src: "/opt/dog_trainer.{{ git_hash }}"
    dest: /opt/dog_trainer
    owner: dog
    group: dog
    state: link
  when: env == "box"

- name: mkdir /opt/dog_trainer/priv/certs/rabbitmq/
  file: dest=/opt/dog_trainer/priv/certs/rabbitmq/ owner=dog group=dog state=directory mode=0700
  tags:
  - upgrade

- name: mkdir /opt/dog_trainer/priv/certs/rabbitmq/ca
  file: dest=/opt/dog_trainer/priv/certs/rabbitmq/ca owner=dog group=dog state=directory mode=0700
  tags:
  - upgrade

- name: mkdir /opt/dog_trainer/priv/certs/rabbitmq/client
  file: dest=/opt/dog_trainer/priv/certs/rabbitmq/client owner=dog group=dog state=directory mode=0700
  tags:
  - upgrade

    #- name: place broker certs from credstash
    #  template:
    #      src   : "templates/certs/{{ item.d }}/{{ item.f }}.j2"
    #      dest  : "/opt/dog_trainer/priv/certs/rabbitmq/{{ item.d }}/{{ item.f }}"
    #      owner : dog
    #      group : dog
    #      mode  : 0700
    #  with_items:
    #      - {d: 'ca', f: 'cacert.pem'}
    #      - {d: 'client', f: 'cert.pem'}
    #      - {d: 'client', f: 'key.pem'}
    #  tags:
    #  - upgrade

- name: mkdir /etc/dog_trainer
  file: dest=/etc/dog_trainer owner=dog group=dog state=directory mode=0700

- name: mkdir /var/run/dog_trainer
  file: dest=/var/run/dog_trainer owner=dog group=dog state=directory mode=0700

- name: mkdir /var/log/dog_trainer
  file: dest=/var/log/dog_trainer owner=dog group=dog state=directory mode=0700

- name: chmod /var/db/
  file: dest=/var/db/ state=directory mode=0777

- name: mkdir /var/db/dog_trainer
  file: dest=/var/db/dog_trainer owner=dog group=dog state=directory mode=0700

- name: mkdir /tmp/erl_pipes
  file: dest=/tmp/erl_pipes/ owner=root group=root state=directory mode=0777

- name: mkdir /tmp/erl_pipes/dog
  file: dest=/tmp/erl_pipes/dog owner=dog group=dog state=directory mode=0700

  #- name: copy erlang cookie to host
  #  vars:
  #    app: dog_trainer
  #    app_owner: dog
  #  copy:
  #    src: "files/erlang.cookie.{{ env }}"
  #    dest: "/home/{{ app_owner }}/.erlang.cookie"
  #    owner: "{{ app_owner }}"
  #    group: "{{ app_owner }}"
  #    mode: 0400
  #    force: yes
  #  tags:
  #  - upgrade
  
- name: restart dog_trainer
  service:
    name: dog_trainer
    state: restarted
    enabled: yes
  tags:
  - upgrade
